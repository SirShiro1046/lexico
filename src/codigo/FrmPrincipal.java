/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package codigo;

import com.formdev.flatlaf.intellijthemes.FlatCyanLightIJTheme;
import gestion.Mnemico;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.Reader;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author myand
 */
public class FrmPrincipal extends javax.swing.JFrame {
    coleccion coleccionLex = new coleccion();
    JFileChooser seleccionado = new JFileChooser();
    File archivo;
    gestion gestiona = new gestion();
    DefaultTableModel modelo;
    LinkedList<Mnemico> listaMnemicos;

    /**
     * Creates new form FrmPrincipal
     */
    public FrmPrincipal() {
        initComponents();
        setIconImage(getToolkit().getDefaultToolkit().getImage(getClass().getResource("/img/icono.png")));
        setLocationRelativeTo(null);
        modelo = new DefaultTableModel();
        listaMnemicos = new LinkedList<>();
    }

    public void listar() {
        modelo = (DefaultTableModel) tblMnemico.getModel();
        Object[] ob = new Object[4];
        for (int i = 0; i < listaMnemicos.size(); i++) {
            ob[0] = listaMnemicos.get(i).getToken();
            ob[1] = listaMnemicos.get(i).getLexico();
            ob[2] = listaMnemicos.get(i).getLexema_1();
            ob[3] = listaMnemicos.get(i).getLexema_2();
            modelo.addRow(ob);
        }
        tblMnemico.setModel(modelo);
    }

    public void limpiarTabla() {
        for (int i = 0; i < modelo.getRowCount(); i++) {
            modelo.removeRow(i);
            i = i - 1;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaTexto = new javax.swing.JTextArea();
        Analizar = new javax.swing.JPanel();
        btnAnalizar = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblMnemico = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaSustituido = new javax.swing.JTextArea();
        refactorizar = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        btnImportarTxt = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        exportarTbl = new javax.swing.JMenuItem();
        exportarTxt = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        btnSalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setForeground(new java.awt.Color(204, 255, 204));

        txtAreaTexto.setBackground(new java.awt.Color(199, 222, 226));
        txtAreaTexto.setColumns(20);
        txtAreaTexto.setFont(new java.awt.Font("Verdana", 0, 10)); // NOI18N
        txtAreaTexto.setRows(5);
        jScrollPane1.setViewportView(txtAreaTexto);

        Analizar.setBackground(new java.awt.Color(0, 204, 255));
        Analizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AnalizarMouseClicked(evt);
            }
        });

        btnAnalizar.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btnAnalizar.setForeground(new java.awt.Color(0, 0, 0));
        btnAnalizar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnAnalizar.setText("Analizar Txt");

        javax.swing.GroupLayout AnalizarLayout = new javax.swing.GroupLayout(Analizar);
        Analizar.setLayout(AnalizarLayout);
        AnalizarLayout.setHorizontalGroup(
            AnalizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnAnalizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        AnalizarLayout.setVerticalGroup(
            AnalizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnAnalizar, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
        );

        tblMnemico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "TOKEN", "Comp Lexico", "Lexema 1", "Lexema 2"
            }
        ));
        jScrollPane3.setViewportView(tblMnemico);

        txtAreaSustituido.setColumns(20);
        txtAreaSustituido.setRows(5);
        jScrollPane2.setViewportView(txtAreaSustituido);

        refactorizar.setBackground(new java.awt.Color(102, 204, 255));
        refactorizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refactorizarMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Refactor uwu");

        javax.swing.GroupLayout refactorizarLayout = new javax.swing.GroupLayout(refactorizar);
        refactorizar.setLayout(refactorizarLayout);
        refactorizarLayout.setHorizontalGroup(
            refactorizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        refactorizarLayout.setVerticalGroup(
            refactorizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Analizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(12, 12, 12))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                        .addGap(10, 10, 10))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(refactorizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGap(10, 10, 10))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addGap(15, 15, 15))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 50, Short.MAX_VALUE)
                        .addComponent(Analizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(refactorizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70))))
        );

        jMenuBar1.setBorder(null);
        jMenuBar1.setForeground(new java.awt.Color(153, 153, 153));

        jMenu1.setBackground(new java.awt.Color(153, 153, 153));
        jMenu1.setForeground(new java.awt.Color(204, 204, 204));
        jMenu1.setText("Archivo");

        btnImportarTxt.setText("Importar txt");
        btnImportarTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImportarTxtMouseClicked(evt);
            }
        });
        btnImportarTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportarTxtActionPerformed(evt);
            }
        });
        jMenu1.add(btnImportarTxt);

        jMenu3.setText("Exportar");

        exportarTbl.setText("Exportar Tabla");
        exportarTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exportarTblMouseClicked(evt);
            }
        });
        exportarTbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportarTblActionPerformed(evt);
            }
        });
        jMenu3.add(exportarTbl);

        exportarTxt.setText("Exportar txt");
        exportarTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportarTxtActionPerformed(evt);
            }
        });
        jMenu3.add(exportarTxt);

        jMenu1.add(jMenu3);

        jMenuBar1.add(jMenu1);

        jMenu2.setForeground(new java.awt.Color(102, 204, 255));
        jMenu2.setText("Salir");

        btnSalir.setBackground(new java.awt.Color(255, 0, 0));
        btnSalir.setText("Exit");
        btnSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSalirMouseClicked(evt);
            }
        });
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jMenu2.add(btnSalir);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnImportarTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportarTxtActionPerformed
        if (seleccionado.showDialog(this, "abrir archivo") == JFileChooser.APPROVE_OPTION) {
            archivo = seleccionado.getSelectedFile();
            if (archivo.canRead()) {
                if (archivo.getName().endsWith("txt")) {
                    String contenido = gestiona.AbrirAtexto(archivo);
                    txtAreaTexto.setText(contenido);
                } else {
                    if (!archivo.getName().endsWith("txt")) {
                        JOptionPane.showMessageDialog(null, "Por favor de elegir un archivo\nCon terminacion .txt");
                    }
                }
            }

        }
    }//GEN-LAST:event_btnImportarTxtActionPerformed

    private void AnalizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AnalizarMouseClicked


        try {
            Reader lector = new BufferedReader(new FileReader(archivo));
            Lexer lexer = new Lexer(lector);
            String resultado = "";
            while (true) {
                Tokens tokens = lexer.yylex();
                if (tokens == null) {
                    resultado += "FIN";
                    //txtResultado.setText(resultado);
                    return;
                }
                switch (tokens) {
                    //case ERROR ->
                        //resultado += "Simbolo no definido\n";

                    case PALRE, OPASI,OPARI, ID, NUM, OPREL, OPIND, OPESP ,MSJ -> {
                        resultado += lexer.lexeme + " : Es un " + tokens + "\n";
                        String token = lexer.lexeme + "";
                        String lexi = tokens + "";

                        Mnemico m = new Mnemico();
                        m.setToken(token);
                        m.setLexico(lexi);
                        m.setLexema_1(coleccionLex.coleccionLexemana_1(lexer.lexeme, tokens + ""));
                        m.setLexema_2(coleccionLex.coleccionLexemana_2(lexer.lexeme, tokens + ""));

                        listaMnemicos.add(m);
                        limpiarTabla();
                        listar();
                    }
                    default ->
                        resultado += "Tokens:" + tokens + "\n";
                }
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_AnalizarMouseClicked

    private void btnImportarTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImportarTxtMouseClicked

    }//GEN-LAST:event_btnImportarTxtMouseClicked

    private void btnSalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalirMouseClicked

    }//GEN-LAST:event_btnSalirMouseClicked

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void exportarTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportarTblMouseClicked

    }//GEN-LAST:event_exportarTblMouseClicked

    private void exportarTblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportarTblActionPerformed
        if (seleccionado.showDialog(null, "guardar Texto") == JFileChooser.APPROVE_OPTION) {
            archivo = seleccionado.getSelectedFile();
            if (archivo.getName().endsWith("txt")) {
                String contenido = "";
                for (int i = 0; i < listaMnemicos.size(); i++) {
                    contenido = contenido + listaMnemicos.get(i).getToken() + "       " + listaMnemicos.get(i).getLexico() + "        " + listaMnemicos.get(i).getLexema_1() + "       " + listaMnemicos.get(i).getLexema_2() + "\n";

                }
                String respuesta = gestiona.GuardarTexto(archivo, contenido);
                if (respuesta != null) {
                    JOptionPane.showMessageDialog(null, respuesta);
                } else {
                    JOptionPane.showMessageDialog(null, "Archivos no guardado");
                }
            }else{
                 JOptionPane.showMessageDialog(null, "ADVERTENCIA\n\nArchivo no se puedo guardar\nSolo se guardan Archivos\nCon terminacion .txt");
            }
           
        }
    }//GEN-LAST:event_exportarTblActionPerformed

    private void refactorizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refactorizarMouseClicked
        String sustituto = "";
     
        for (int i = 0; i < listaMnemicos.size(); i++) {
            if (listaMnemicos.get(i).getLexema_1().equalsIgnoreCase("DEL") || listaMnemicos.get(i).getLexema_1().equalsIgnoreCase("LLI") || listaMnemicos.get(i).getLexema_1().equalsIgnoreCase("LLD")) {
                sustituto = sustituto + listaMnemicos.get(i).getLexema_1() + "  ";
                sustituto = sustituto + "\n\n";
            } else {
                sustituto = sustituto + listaMnemicos.get(i).getLexema_1() + "  ";
            }
            txtAreaSustituido.setText(sustituto);
        }
    }//GEN-LAST:event_refactorizarMouseClicked

    private void exportarTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportarTxtActionPerformed

        if (seleccionado.showDialog(null, "guardar Texto") == JFileChooser.APPROVE_OPTION) {
            archivo = seleccionado.getSelectedFile();
            if (archivo.getName().endsWith("txt")) {
                String contenido = "";
                
                    contenido = txtAreaSustituido.getText();

                
                String respuesta = gestiona.GuardarTexto(archivo, contenido);
                if (respuesta != null) {
                    JOptionPane.showMessageDialog(null, respuesta);
                } else {
                    JOptionPane.showMessageDialog(null, "Archivos no guardado");
                }
            }
            else{
                 JOptionPane.showMessageDialog(null, "ADVERTENCIA\n\nArchivo no se puedo guardar\nSolo se guardan Archivos\nCon terminacion .txt");
            }
        }


    }//GEN-LAST:event_exportarTxtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            //TextureLookAndFeel()
            try {
                UIManager.setLookAndFeel(new FlatCyanLightIJTheme());
            } catch (UnsupportedLookAndFeelException ex) {
                Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            new FrmPrincipal().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Analizar;
    private javax.swing.JLabel btnAnalizar;
    private javax.swing.JMenuItem btnImportarTxt;
    private javax.swing.JMenuItem btnSalir;
    private javax.swing.JMenuItem exportarTbl;
    private javax.swing.JMenuItem exportarTxt;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel refactorizar;
    private javax.swing.JTable tblMnemico;
    private javax.swing.JTextArea txtAreaSustituido;
    private javax.swing.JTextArea txtAreaTexto;
    // End of variables declaration//GEN-END:variables
}
